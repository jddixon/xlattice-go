package msg;

message XLatticeMsg {
    enum Cmd {
        // Hello needs to be replaced by rsa/aes handshake
        Hello       = 1;    // msgN, id, ck, sk; initiates comms cycle
        Bye         = 2;    // msgN; ends comms cycle
        KeepAlive   = 3;    // msgN, id, opt salt, opt sig
        Ack         = 4;    // above plus yourMsgN, yourID
        Error       = 5;    // above plus errCode, errDesc
        Get         = 6;    // like KeepAlive plus hash
        Put         = 7;    // above plus payload
        IHave       = 8;    // like KeepAlive plus payload = list of hashes
    }
    optional Cmd    Op          = 1;
    optional uint64 MsgN        = 2;    // Nth msg on this cnx, starting at 1
    optional bytes  ID          = 3;
    optional bytes  Salt        = 4;
    optional bytes  Sig         = 5;
    optional uint64 YourMsgN    = 6;
    optional bytes  YourID      = 7;
    optional uint64 ErrCode     = 8;
    optional string ErrDesc     = 9;
    optional bytes  Hash        = 10;
    optional bytes  Payload     = 11;
    optional bytes  CommsKey    = 12;   // hello
    optional bytes  SigKey      = 13;   // hello
    optional string MyEnd       = 14;   // hello, optional, address:port
}

