package node

// xlattice_go/node/cluster_test.go

import (
	"fmt"
	"github.com/jddixon/xlattice_go/rnglib"
	. "gopkg.in/check.v1"
)

var _ = fmt.Print

// Data shared by the different versions of TestCluster.  These
// are
//
// o TestLocalHostCluster
// o TestLocalNetCluster
// o TestGlobalNetCluster
//
// Spin up a number of nodes, have them exchange a bit of traffic,
// verify that things go where they should be going.  There are five
// nodes participating, nodeA, nodeB, nodeC, nodeD, and nodeE.  There
// are two overlays, overlayX and overlayY.  The first three nodes have
// access to overlayX and the last three have access to overlayY, so
// nodeC acts as a gateway.  That is, it will forward messages from
// nodes on one overlay to nodes on the other.
//
// In this test each of the K = 5 nodes will transmit a random
// number N of messages (where say 20 <= N < 40) to each of the other
// nodes.  The peer will respond with an RSA/SHA1 digital signature
// for the message.
//
// NodeIDs are keys are generated by the nodes at boot time.  In
// this version of the tests, peer information is passed to the
// nodes out of band.  In a future version, all nodes may have
// knowledge of a master key, an RSA public key, and that master
// key will be used to validate messages to the nodes containing
// information about peers.

func (s *XLSuite) TestCluster(c *C) {
	if VERBOSITY > 0 {
		fmt.Println("TEST_CLUSTER")
	}
	rng := rnglib.MakeSimpleRNG()
	_ = rng

	// XXX STUB
}
